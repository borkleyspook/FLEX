name: iOS Build

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
  workflow_dispatch:

permissions:
  actions: read
  contents: write

jobs:
  build-ios:
    name: Build iOS Project
    runs-on: macOS-latest
    
    strategy:
      matrix:
        include:
          - xcode_scheme: UICatalog
          - xcode_scheme: FLEX

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Detect Project Structure
      id: detect_project
      run: |
        echo "Current directory structure:"
        find . -name "*.xcworkspace" -o -name "*.xcodeproj" | head -10
        
        if [ -d "FLEX.xcworkspace" ]; then
          echo "PROJECT_TYPE=workspace" >> $GITHUB_OUTPUT
          echo "PROJECT_PATH=FLEX.xcworkspace" >> $GITHUB_OUTPUT
          echo "Using FLEX.xcworkspace"
        elif [ -d "FLEX.xcodeproj" ]; then
          echo "PROJECT_TYPE=project" >> $GITHUB_OUTPUT
          echo "PROJECT_PATH=FLEX.xcodeproj" >> $GITHUB_OUTPUT
          echo "Using FLEX.xcodeproj"
        else
          # Try to find any workspace or project
          WORKSPACE=$(find . -name "*.xcworkspace" -d 1 | head -1)
          PROJECT=$(find . -name "*.xcodeproj" -d 1 | head -1)
          
          if [ -n "$WORKSPACE" ]; then
            echo "PROJECT_TYPE=workspace" >> $GITHUB_OUTPUT
            echo "PROJECT_PATH=$WORKSPACE" >> $GITHUB_OUTPUT
            echo "Using found workspace: $WORKSPACE"
          elif [ -n "$PROJECT" ]; then
            echo "PROJECT_TYPE=project" >> $GITHUB_OUTPUT
            echo "PROJECT_PATH=$PROJECT" >> $GITHUB_OUTPUT
            echo "Using found project: $PROJECT"
          else
            echo "No Xcode project or workspace found"
            exit 1
          fi
        fi

    - name: List Available Schemes
      run: |
        if [ "${{ steps.detect_project.outputs.PROJECT_TYPE }}" = "workspace" ]; then
          xcodebuild -workspace "${{ steps.detect_project.outputs.PROJECT_PATH }}" -list
        else
          xcodebuild -project "${{ steps.detect_project.outputs.PROJECT_PATH }}" -list
        fi

    - name: Install xcpretty
      run: gem install xcpretty

    - name: Build with xcodebuild
      run: |
        set -o pipefail
        if [ "${{ steps.detect_project.outputs.PROJECT_TYPE }}" = "workspace" ]; then
          xcodebuild -workspace "${{ steps.detect_project.outputs.PROJECT_PATH }}" -scheme ${{ matrix.xcode_scheme }} -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' build | xcpretty
        else
          xcodebuild -project "${{ steps.detect_project.outputs.PROJECT_PATH }}" -scheme ${{ matrix.xcode_scheme }} -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' build | xcpretty
        fi

    - name: List build products
      run: |
        echo "Build completed for scheme: ${{ matrix.xcode_scheme }}"
        find . -name "*.app" -o -name "*.framework" | head -10

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-${{ matrix.xcode_scheme }}
        path: |
          build/
          *.app
          *.framework
        retention-days: 7

    - name: Create Release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: build-${{ github.run_number }}
        release_name: Build ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Build to Release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/*
        file_glob: true
        tag: build-${{ github.run_number }}
        overwrite: true