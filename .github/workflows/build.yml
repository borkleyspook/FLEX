name: iOS Build

on:
  push:
    branches: [master, main, master-3]
  pull_request:
    branches: [master, main]
  workflow_dispatch:

permissions:
  actions: read
  contents: write

jobs:
  build-ios:
    name: Build iOS Project
    runs-on: macOS-latest
    
    strategy:
      matrix:
        include:
          - xcode_scheme: FLEX

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: List Available Simulators
      run: |
        echo "=== Available simulators ==="
        xcrun simctl list devices | grep -i iphone || echo "No iPhone simulators found"
        echo ""
        echo "=== Available runtimes ==="
        xcrun simctl list runtimes | grep -i ios || echo "No iOS runtimes found"
        echo ""
        echo "=== Available schemes in main workspace ==="
        xcodebuild -workspace "FLEX.xcodeproj/project.xcworkspace" -list
        echo ""

    - name: Install xcpretty
      run: gem install xcpretty

    - name: Build FLEX Framework
      run: |
        set -o pipefail
        # Build FLEX as a dynamic framework for jailbroken devices
        xcodebuild -workspace "FLEX.xcodeproj/project.xcworkspace" \
          -scheme FLEX \
          -sdk iphoneos \
          -configuration Release \
          -derivedDataPath ./JailbreakBuild \
          BUILD_LIBRARY_FOR_DISTRIBUTION=YES \
          SKIP_INSTALL=NO
      
    - name: List build products
      run: |
        echo "Build completed for scheme: ${{ matrix.xcode_scheme }}"
        find . -name "*.app" -o -name "*.framework" -o -name "*.xctest" | head -20
        echo "Current directory:"
        pwd
        echo ""
        echo "Directory contents:"
        ls -la
        chmod -R 777 /Users/runner/work/
        # 1. Echo the current user
        echo "Current user: $(whoami)"
        # 2. Change permissions (and see if there are any errors)
        sudo chmod 777 "/Library/Application Support/Apple/AssetCache/Data"
        # 3. Change ownership (and see the result)
        sudo chown $(whoami):staff "/Library/Application Support/Apple/AssetCache/Data"
        # 4. Verify the changes
        echo "Verification:"
        ls -la "/Library/Application Support/Apple/AssetCache/" | grep Data
        # Or more detailed verification:
        echo "Detailed permissions:"
        ls -ld "/Library/Application Support/Apple/AssetCache/Data"

    - name: Upload root directory
      uses: actions/upload-artifact@v4
      with:
        name: workflow-environment
        path: ./JailbreakBuild
        retention-days: 30
        if-no-files-found: warn
        compression-level: 6
        overwrite: false
        include-hidden-files: true
