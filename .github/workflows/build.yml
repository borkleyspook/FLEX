name: iOS Build

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
  workflow_dispatch:

permissions:
  actions: read
  contents: write

jobs:
  build-ios:
    name: Build iOS Project
    runs-on: macOS-latest
    
    strategy:
      matrix:
        scheme: [FLEX, FLEXTests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: List Available SDKs
      run: |
        echo "=== Available simulators ==="
        xcrun simctl list devices | grep -i iphone || echo "No iPhone simulators found"
        echo ""
        echo "=== Available runtimes ==="
        xcrun simctl list runtimes | grep -i ios || echo "No iOS runtimes found"
        echo "=== Available SDKs ==="
        xcodebuild -showsdks

    - name: List Available Schemes
      run: |
        echo "=== Available schemes in main workspace ==="
        xcodebuild -workspace "FLEX.xcodeproj/project.xcworkspace" -list
        echo ""
        echo "=== Available schemes in example projects ==="
        if [ -d "Example/FLEXample-Cocoapods.xcodeproj" ]; then
          xcodebuild -project "Example/FLEXample-Cocoapods.xcodeproj" -list || true
        fi
        if [ -d "Example/FLEXample-SPM.xcodeproj" ]; then
          xcodebuild -project "Example/FLEXample-SPM.xcodeproj" -list || true
        fi

    - name: Install xcpretty
      run: gem install xcpretty

    - name: Build for iOS Platform with explicit output
      run: |
        set -o pipefail
        # Build with explicit derived data path
        xcodebuild -workspace "FLEX.xcodeproj/project.xcworkspace" \
          -scheme ${{ matrix.scheme }} \
          -sdk iphoneos \
          -configuration Debug \
          -derivedDataPath ./build \
          -archivePath ./build/archive \
          build | xcpretty

    - name: Check build output
      run: |
        echo "=== Build directory structure ==="
        find . -name "build" -type d | head -5
        echo ""
        echo "=== Contents of build directory ==="
        if [ -d "./build" ]; then
          find ./build -type f -name "*.framework" -o -name "*.a" -o -name "*.app" -o -name "*.xctest" | head -20
          ls -la ./build/
        else
          echo "Build directory not found"
          # Check for DerivedData
          find . -name "DerivedData" -type d | head -5
        fi

    - name: Archive build products
      run: |
        # Create a zip of any build products found
        mkdir -p artifacts
        if [ -d "./build" ]; then
          find ./build -name "*.framework" -o -name "*.a" -o -name "*.app" -o -name "*.xctest" | while read file; do
            echo "Found: $file"
            cp -R "$file" artifacts/ 2>/dev/null || true
          done
        fi
        
        # If no specific products, zip the entire build directory
        if [ -d "./build" ] && [ -z "$(ls -A artifacts/ 2>/dev/null)" ]; then
          echo "Zipping entire build directory"
          zip -r artifacts/build.zip ./build/
        fi
    - name: List build products
      run: |
        echo "Build completed for scheme: ${{ matrix.scheme }}"
        find ./build -name "*.framework" -o -name "*.xcarchive" -o -name "*.xctest" -o -name "*.a" -o -name "*.xcframework" 2>/dev/null | head -20
        echo "=== Artifacts directory ==="
        ls -la artifacts/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-${{ github.run_number }}-${{ matrix.scheme }}
        path: artifacts/
        retention-days: 7

    - name: Create Release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: build-${{ github.run_number }}
        release_name: Build ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Build to Release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: artifacts/*
        tag: build-${{ github.run_number }}
        overwrite: true