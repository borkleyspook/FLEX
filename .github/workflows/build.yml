name: iOS Build

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
  workflow_dispatch:

permissions:
  actions: read
  contents: write

jobs:
  build-ios:
    name: Build iOS Project
    runs-on: macOS-latest
    
    strategy:
      matrix:
        scheme: [FLEX, FLEXTests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: List Available Simulators
      run: |
        echo "=== Available simulators ==="
        xcrun simctl list devices | grep -i iphone || echo "No iPhone simulators found"
        echo ""
        echo "=== Available runtimes ==="
        xcrun simctl list runtimes | grep -i ios || echo "No iOS runtimes found"
        echo "=== Available SDKs ==="
        xcodebuild -showsdks

    - name: List Available Schemes
      run: |
        echo "=== Available schemes in main workspace ==="
        xcodebuild -workspace "FLEX.xcodeproj/project.xcworkspace" -list
        echo ""
        echo "=== Available schemes in example projects ==="
        if [ -d "Example/FLEXample-Cocoapods.xcodeproj" ]; then
          xcodebuild -project "Example/FLEXample-Cocoapods.xcodeproj" -list || true
        fi
        if [ -d "Example/FLEXample-SPM.xcodeproj" ]; then
          xcodebuild -project "Example/FLEXample-SPM.xcodeproj" -list || true
        fi

    - name: Install xcpretty
      run: gem install xcpretty

    - name: Build for iOS Platform
      run: |
        set -o pipefail
        # Build for generic iOS platform (iphoneos)
        xcodebuild -workspace "FLEX.xcodeproj/project.xcworkspace" -scheme ${{ matrix.scheme }} -sdk iphoneos -configuration Debug build | xcpretty

    - name: Build for iOS Simulator (skip if fails)
      run: |
        set +e
        # Try building for simulator, but don't fail the workflow if it doesn't work
        xcodebuild -workspace "FLEX.xcodeproj/project.xcworkspace" -scheme ${{ matrix.scheme }} -sdk iphonesimulator -configuration Debug build | xcpretty || echo "Simulator build skipped - no simulators available"
        set -e

    - name: Create XCFramework (if FLEX scheme)
      if: matrix.scheme == 'FLEX'
      run: |
        set -o pipefail
        # Try building example projects if they exist
        if [ -d "Example/FLEXample-Cocoapods.xcodeproj" ]; then
          echo "Building FLEXample-Cocoapods..."
          xcodebuild -project "Example/FLEXample-Cocoapods.xcodeproj" -scheme FLEXample -sdk iphonesimulator build | xcpretty || echo "FLEXample-Cocoapods build failed or scheme not found"
        fi
        if [ -d "Example/FLEXample-SPM.xcodeproj" ]; then
          echo "Building FLEXample-SPM..."
          xcodebuild -project "Example/FLEXample-SPM.xcodeproj" -scheme FLEXample -sdk iphonesimulator build | xcpretty || echo "FLEXample-SPM build failed or scheme not found"
        fi

    - name: List build products
      run: |
        echo "Build completed for scheme: ${{ matrix.xcode_scheme }}"
        find . -name "*.app" -o -name "*.framework" -o -name "*.xctest" | head -20
    - name: Create XCFramework (if FLEX scheme)
      if: matrix.scheme == 'FLEX'
      run: |
        set -o pipefail
        # Create XCFramework that includes both device and simulator slices
        xcodebuild -workspace "FLEX.xcodeproj/project.xcworkspace" -scheme FLEX -configuration Debug -destination 'generic/platform=iOS' -archivePath ./build/FLEX-ios.xcarchive archive | xcpretty
        
        # Try to archive for simulator (may fail without simulators)
        set +e
        xcodebuild -workspace "FLEX.xcodeproj/project.xcworkspace" -scheme FLEX -configuration Debug -destination 'generic/platform=iOS Simulator' -archivePath ./build/FLEX-simulator.xcarchive archive | xcpretty || echo "Simulator archive skipped"
        set -e
        
        # Create XCFramework if both archives exist
        if [ -d "./build/FLEX-ios.xcarchive" ] && [ -d "./build/FLEX-simulator.xcarchive" ]; then
          xcodebuild -create-xcframework \
            -framework ./build/FLEX-ios.xcarchive/Products/Library/Frameworks/FLEX.framework \
            -framework ./build/FLEX-simulator.xcarchive/Products/Library/Frameworks/FLEX.framework \
            -output ./build/FLEX.xcframework
        fi

    - name: Run Tests (compile only)
      if: matrix.scheme == 'FLEXTests'
      run: |
        set -o pipefail
        # Build tests to verify they compile (may not be able to run without simulator)
        xcodebuild -workspace "FLEX.xcodeproj/project.xcworkspace" -scheme FLEXTests -sdk iphoneos -configuration Debug build-for-testing | xcpretty

    - name: List build products
      run: |
        echo "Build completed for scheme: ${{ matrix.scheme }}"
        find ./build -name "*.framework" -o -name "*.xcarchive" -o -name "*.xctest" -o -name "*.a" -o -name "*.xcframework" 2>/dev/null | head -20

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-${{ github.run_number }}-${{ matrix.scheme }}
        path: |
          build/
          DerivedData/
        retention-days: 7

    - name: Create Release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: build-${{ github.run_number }}
        release_name: Build ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Build to Release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/*
        file_glob: true
        tag: build-${{ github.run_number }}
        overwrite: true